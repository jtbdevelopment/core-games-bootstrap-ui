!function(o){o.module("coreGamesBootstrapUi.config",[]).value("coreGamesBootstrapUi.config",{debug:!0}),o.module("coreGamesBootstrapUi.controllers",[]),o.module("coreGamesBootstrapUi.directives",[]),o.module("coreGamesBootstrapUi.filters",[]),o.module("coreGamesBootstrapUi.services",[]),o.module("coreGamesBootstrapUi",["coreGamesBootstrapUi.config","coreGamesBootstrapUi.directives","coreGamesBootstrapUi.filters","coreGamesBootstrapUi.services","coreGamesBootstrapUi.controllers","ngResource","ngCookies","ngSanitize","ui.bootstrap"])}(angular),angular.module("coreGamesBootstrapUi.controllers").controller("CoreBootstrapInviteCtrl",["$uibModalInstance","invitableFriends","message","jtbFacebook",function(o,e,n,t){var a=this;a.invitableFriends=e,a.chosenFriends=[],a.message=n,a.invite=function(){var e=[];angular.forEach(a.chosenFriends,function(o){e.push(o.id)}),t.inviteFriends(e,n),o.close()},a.cancel=function(){o.dismiss()}}]),angular.module("coreGamesBootstrapUi.controllers").controller("CoreBootstrapSignedInCtrl",["$location","$rootScope","$cacheFactory",function(o,e,n){function t(){n.get("$http").removeAll()}function a(){console.log("Logged in"),t(),e.$broadcast("login"),o.path("/main")}a()}]),angular.module("coreGamesBootstrapUi.controllers").controller("CoreBootstrapSignInCtrl",["$window","$cookies","jtbFacebook",function(o,e,n){function t(){i.showFacebook=!0,i.showManual=o.location.href.indexOf("localhost")>-1||o.location.href.indexOf("-dev")>-1,i.message=""}function a(){i.showFacebook=!1,i.showManual=!1,i.message="Logging in via Facebook",o.location="/auth/facebook"}var i=this;i.message="Initializing...",i.showFacebook=!1,i.showManual=!1,i.csrf=e["XSRF-TOKEN"],i.fbLogin=function(){n.initiateFBLogin().then(function(o){o.auto?a():t()},function(){t()})},n.canAutoSignIn().then(function(o){o.auto?a():t()},function(){t()})}]),angular.module("coreGamesBootstrapUi.services").factory("jtbBootstrapGameActions",["$http","$location","$uibModal","jtbGameCache","jtbPlayerService",function(o,e,n,t,a){function i(o,e){var n=this;n.errorMessage=e,n.closeError=function(){o.close()}}function r(o,e){var n=this;n.confirmMessage=e,n.takeAction=function(){o.close()},n.cancelAction=function(){o.dismiss()}}function c(o){var e={controller:["$uibModalInstance","message",i],controllerAs:"errorDialog",resolve:{message:function(){return o}}};angular.isDefined(g)?e.templateUrl=g:e.template=h,n.open(e)}function s(o){return a.currentPlayerBaseURL()+"/game/"+o.id+"/"}function l(){}function u(){}function m(o){l(),o.success(function(o){u(),t.putUpdatedGame(o)}).error(function(o,e){console.error(o+"/"+e),u(),v(o)})}function f(o,e){var t={controller:["$uibModalInstance","message",r],controllerAs:"confirmDialog",resolve:{message:function(){return o}}};angular.isDefined(p)?t.templateUrl=p:t.template=b,n.open(t).result.then(function(){m(e())})}function d(e,n){return o.put(s(e)+n)}var g,p,h='<div class="game-error-dialog" role="dialog"><div class="modal-header"><h4 class="modal-title">Sorry!</h4></div><div class="modal-body"><span class="error-message">{{errorDialog.errorMessage}}</span></div><div class="modal-footer"><button class="btn btn-default btn-info btn-default-focus close-button" ng-click="errorDialog.closeError()">OK</button></div></div>',b='<div class="game-confirm-dialog"><div class="modal-header"><h4 class="modal-title">{{confirmDialog.confirmMessage}}</h4></div><div class="modal-body"><span class="confirm-message">Are you sure?</span></div><div class="modal-footer"><button class="btn btn-default btn-danger action-button" ng-click="confirmDialog.takeAction()">Yes</button><button class="btn btn-default btn-default btn-default-focus cancel-button" ng-click="confirmDialog.cancelAction()">No</button></div></div>',v=c;return{setErrorHandler:function(o){v=o},setConfirmDialogHTMLTemplate:function(o){p=o},setErrorDialogHTMLTemplate:function(o){g=o},getGameURL:function(o){return s(o)},wrapActionOnGame:function(o){m(o)},wrapConfirmedActionOnGame:function(o,e){f(o,e)},accept:function(o){this.wrapActionOnGame(d(o,"accept"))},reject:function(o){this.wrapConfirmedActionOnGame("Reject this game!",function(){return d(o,"reject")})},declineRematch:function(o){this.wrapConfirmedActionOnGame("Decline further rematches.",function(){return d(o,"endRematch")})},rematch:function(o){this.wrapActionOnGame(d(o,"rematch")),e.path("/main")},quit:function(o){this.wrapConfirmedActionOnGame("Quit this game!",function(){return d(o,"quit")})}}}]);